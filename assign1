//assignment1
//Dong Wu CIT233430



#include <iostream>
#include <fstream>
#include <iomanip>
#include <string>

using namespace std;
void binarySearch(int, int, int, int arra[]);
void linearSearch(char arrb[], char, int);

const int numSize = 18;
const int charSize = 17;

int main() {
	int numArray[numSize]{};
	char charArray[charSize]{};
	ifstream input("D:\\Input.txt");

	if (input.fail()) {
		cout << "Issue with input.txt";
		return -1;
	}

	for (int i = 0; i < 18; i++) {
		input >> numArray[i];
	}

	for (int i = 0; i < 17; i++) {
		input >> charArray[i];
	}
	//read elements from arrays
	cout << "The unsorted list of integers: " << endl;
	for (int i = 0; i < 18; i++)
		cout << numArray[i] << " ";
	std::cout << std::endl;
	cout << "The unsorted list of characters: " << endl;
	for (int i = 0; i < 17; i++)
		cout << charArray[i] << " ";
	cout << std::endl;

	//exchange values in for loops
	int j{};
	int temp{};

	for(int i = 0; i < 18; i++)
	for (j = 0; j < 17; j++) {
		if (numArray[j] < numArray[j + 1]) {
			temp = numArray[j + 1];
			numArray[j + 1] = numArray[j];
			numArray[j] = temp;

		}
	}
	cout << "The sorted list of integers in descending order: " << endl;
	for (int i = 0; i < 18; i++)
		cout << numArray[i] << " ";

	cout << std::endl;

	for (int i = 0; i < 17; i++)
		for (j = 0; j < 16; j++) {
			if (charArray[j] > charArray[j + 1]) {
				temp = charArray[j + 1];
				charArray[j + 1] = charArray[j];
				charArray[j] = temp;

			}
		}
	cout << "The sorted list of characters in ascending order: " << endl;
	for (int j = 0; j < 17; j++)
		cout << charArray[j] << " ";

	cout << std::endl;

	//call founctions
	int n{};
	cout << "Enter an integer to search: ";
	cin >> n;
	binarySearch(0, 17, n, numArray);

	cout << std::endl;

	char m{};
	cout << "Enter an character to search: ";
	cin >> m;
	linearSearch(charArray, m, 17);
	
	cout << std::endl;

	input.close();
	return 0;
}

//cut array half to get the right value
void binarySearch(int l, int r, int n, int arra[]) {
	int mid{};
	
	while (l <= r){
		mid = l + (r - l) / 2;
		if (arra[mid] < n){
			r = mid + 1;
		}
		else if (arra[mid] == n){
			cout << "integer " << n << " found at index " << mid << " in the sorted integer array.";
			break;
		}
		else {
			l = mid - 1;
		}
		

	}
	if (l > r) {
		cout << "not found";
	}
	return;
}

//going through every element to get the right value
void linearSearch(char arrb[], char m, int size)
{
	int t = 0;
	int i{};
	
	for (i = 0; i < size; i++) {
		if (arrb[i] == m)
		{
			t = 1;
			cout << "character " << m << " found at index " << i  << " in the sorted character array.";
			break;
		}
	}
	if (t == 0) {
		cout << "not found";
	}
	return;
}
